name: Change issue

on:
  issues:
    types: [opened, edited]

jobs:
  update-jira:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check if Jira Issue Exists
        id: find-issue
        run: |
          # Perform the API call and separate response body and HTTP code
          curl -s -o response.json -w "%{http_code}" -X GET \
               -H "Authorization: Basic $(echo -n ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} | base64)" \
               -H "Content-Type: application/json" \
               "${{ secrets.JIRA_BASE_URL }}/rest/api/2/search?jql=project=KWI AND summary~\"${{ github.event.issue.title }}\"" > http_code.txt
          HTTP_CODE=$(cat http_code.txt)

          # Check if the HTTP code is 200 (success)
          if [ "$HTTP_CODE" -ne 200 ]; then
            echo "Error: Failed to query JIRA API. HTTP code: $HTTP_CODE"
            cat response.json
            exit 1
          fi

          # Extract the issue key from the response
          ISSUE_KEY=$(jq -r '.issues[0].key // empty' response.json)
          if [ -n "$ISSUE_KEY" ]; then
            echo "issue=$ISSUE_KEY" >> $GITHUB_OUTPUT
          else
            echo "issue=" >> $GITHUB_OUTPUT
          fi

      - name: Create Jira Issue
        if: steps.find-issue.outputs.issue == ''
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" -o response.json -X POST \
                          -H "Authorization: Basic $(echo -n ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} | base64)" \
                          -H "Content-Type: application/json" \
                          -d '{
                            "fields": {
                              "project": { "key": "KWI" },
                              "summary": "${{ github.event.issue.title }}",
                              "description": "${{ github.event.issue.body }}",
                              "issuetype": { "name": "Task" }
                            }
                          }' \
                          ${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue)
          HTTP_CODE=$(tail -n1 <<< "$RESPONSE")
          if [ "$HTTP_CODE" -ne 201 ]; then
            echo "Error: Failed to create JIRA issue. HTTP code: $HTTP_CODE"
            cat response.json
            exit 1
          fi

      - name: Update Jira Issue
        if: steps.find-issue.outputs.issue != ''
        run: |
          RESPONSE=$(curl -s -w "%{http_code}" -o response.json -X PUT \
                          -H "Authorization: Basic $(echo -n ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} | base64)" \
                          -H "Content-Type: application/json" \
                          -d '{
                            "fields": {
                              "summary": "${{ github.event.issue.title }}",
                              "description": "${{ github.event.issue.body }}"
                            }
                          }' \
                          ${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/${{ steps.find-issue.outputs.issue }})
          HTTP_CODE=$(tail -n1 <<< "$RESPONSE")
          if [ "$HTTP_CODE" -ne 204 ]; then
            echo "Error: Failed to update JIRA issue. HTTP code: $HTTP_CODE"
            cat response.json
            exit 1
          fi
